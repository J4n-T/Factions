plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.9.24'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

group = 'dev.tieseler'
version = '1.0.0-Alpha'

repositories {
    mavenCentral()
    maven {
        name = "papermc"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    flatDir {
        dirs 'dependencies'
    }
}
dependencies {
    //https://github.com/PaperMC/folia
    implementation("dev.folia:folia-api:1.20.4-R0.1-SNAPSHOT")

    implementation("io.papermc.paper:paper-api:1.20.4-R0.1-SNAPSHOT")

    //https://mvnrepository.com/artifact/org.postgresql/postgresql
    implementation("org.postgresql:postgresql:42.7.3")

    compileOnly("me.clip:placeholderapi:2.11.7-DEV-Folia")

    //hikari
    implementation("com.zaxxer:HikariCP:5.1.0")

    implementation("org.hibernate.orm:hibernate-core:6.5.2.Final")
    implementation("org.hibernate.orm:hibernate-hikaricp:6.5.2.Final")
}


def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

kotlin {
    jvmToolchain(17)
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
